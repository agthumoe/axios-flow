{"version":3,"sources":["../src/index.js"],"names":["pending","type","meta","payload","isPending","AxiosFlow","getTokenHeader","token","localStorage","getItem","TOKEN_LABEL","sessionStorage","Authorization","onSuccess","response","onSuccessCallback","params","data","headers","onSuccessHandler","dispatch","onError","error","onErrorCallback","status","removeItem","onErrorHandler","Api","Error","that","config","prototype","url","action","actionType","_params","post","axios","get","update","put","delete","setTokenLabel","setSuccessHandler","handler","setFailureHandler"],"mappings":"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","file":"index.js","sourcesContent":["import has from \"lodash/has\";\nimport isEmpty from \"lodash/isEmpty\";\nimport axios from \"axios\";\n\nconst pending = (type, meta) => ({\n  type,\n  payload: null,\n  meta: { isPending: true, ...meta }\n});\n\nconst AxiosFlow = dispatch => {\n  const getTokenHeader = () => {\n    const token = localStorage.getItem(AxiosFlow.TOKEN_LABEL)\n      ? localStorage.getItem(AxiosFlow.TOKEN_LABEL)\n      : sessionStorage.getItem(AxiosFlow.TOKEN_LABEL);\n\n    if (token) {\n      return { Authorization: `Bearer ${token}` };\n    }\n    return null;\n  };\n\n  const onSuccess = (type, response, onSuccessCallback, meta, params) => {\n    const { data, headers } = response;\n    if (typeof AxiosFlow.onSuccessHandler === \"function\") {\n      AxiosFlow.onSuccessHandler(dispatch, response);\n    }\n    if (type) {\n      dispatch({\n        type,\n        payload: data,\n        meta: { headers, isPending: false, params, ...meta }\n      });\n    }\n\n    if (typeof onSuccessCallback === \"function\") {\n      onSuccessCallback(response);\n    }\n  };\n\n  const onError = (type, error, onErrorCallback) => {\n    if (has(error, \"response.status\") && error.response.status === 401) {\n      sessionStorage.removeItem(AxiosFlow.TOKEN_LABEL);\n      localStorage.removeItem(AxiosFlow.TOKEN_LABEL);\n    }\n    if (typeof AxiosFlow.onErrorHandler === \"function\") {\n      AxiosFlow.onErrorHandler(dispatch, error);\n    }\n    if (type) {\n      dispatch({ type, error: true });\n    }\n    if (typeof onErrorCallback === \"function\") {\n      onErrorCallback(error);\n    }\n  };\n\n  // here\n  function Api() {\n    if (typeof dispatch !== \"function\") {\n      throw Error(\"Please provide a valid dispatch.\");\n    }\n\n    if (AxiosFlow.TOKEN_LABEL === null) {\n      AxiosFlow.TOKEN_LABEL = \"achromex-auth-token\";\n    }\n\n    const that = this;\n    that.config = {};\n\n    // that.instance = _dispatch => new Api(_dispatch);\n\n    Api.prototype.url = url => {\n      that.config.url = url;\n      return that;\n    };\n\n    Api.prototype.meta = meta => {\n      that.config.meta = meta;\n      return that;\n    };\n\n    Api.prototype.action = type => {\n      that.config.actionType = type;\n      return that;\n    };\n\n    Api.prototype.params = _params => {\n      if (!isEmpty(_params)) {\n        that.config.params = _params;\n      }\n      return that;\n    };\n\n    Api.prototype.data = data => {\n      that.config.data = data;\n      return that;\n    };\n\n    Api.prototype.headers = headers => {\n      that.config.headers = headers;\n      return that;\n    };\n\n    Api.prototype.onSuccess = onSuccessCallback => {\n      that.config.onSuccessCallback = onSuccessCallback;\n      return that;\n    };\n\n    Api.prototype.onError = onErrorCallback => {\n      that.config.onErrorCallback = onErrorCallback;\n      return that;\n    };\n\n    Api.prototype.post = async () => {\n      dispatch(pending(that.config.actionType));\n      try {\n        const response = await axios.post(that.config.url, that.config.data, {\n          headers: { ...getTokenHeader(), ...that.config.headers },\n          params: that.config.params\n        });\n        onSuccess(\n          that.config.actionType,\n          response,\n          that.config.onSuccessCallback,\n          that.config.meta,\n          that.config.params\n        );\n      } catch (error) {\n        onError(that.config.actionType, error, that.config.onErrorCallback);\n      }\n    };\n\n    Api.prototype.get = async () => {\n      if (that.config.actionType) {\n        dispatch(pending(that.config.actionType, that.config.meta));\n      }\n      try {\n        const response = await axios.get(that.config.url, {\n          headers: { ...getTokenHeader(), ...that.config.headers },\n          params: that.config.params || null\n        });\n        onSuccess(\n          that.config.actionType,\n          response,\n          that.config.onSuccessCallback,\n          that.config.meta,\n          that.config.params\n        );\n      } catch (error) {\n        onError(that.config.actionType, error, that.config.onErrorCallback);\n      }\n    };\n\n    Api.prototype.update = async () => {\n      dispatch(pending(that.config.actionType));\n      try {\n        const response = await axios.put(that.config.url, that.config.data, {\n          headers: { ...getTokenHeader(), ...that.config.headers },\n          params: that.config.params\n        });\n        onSuccess(\n          that.config.actionType,\n          response,\n          that.config.onSuccessCallback,\n          that.config.meta,\n          that.config.params\n        );\n      } catch (error) {\n        onError(that.config.actionType, error, that.config.onErrorCallback);\n      }\n    };\n\n    Api.prototype.delete = async () => {\n      dispatch(pending(that.config.actionType));\n      try {\n        const response = await axios.delete(that.config.url, {\n          headers: { ...getTokenHeader(), ...that.config.headers },\n          params: that.config.params || null\n        });\n        onSuccess(\n          that.config.actionType,\n          response,\n          that.config.onSuccessCallback,\n          that.config.meta,\n          that.config.params\n        );\n      } catch (error) {\n        onError(that.config.actionType, error, that.config.onErrorCallback);\n      }\n    };\n  }\n\n  return new Api();\n};\n\nAxiosFlow.setTokenLabel = token => {\n  AxiosFlow.TOKEN_LABEL = token;\n  return AxiosFlow;\n};\n\nAxiosFlow.setSuccessHandler = handler => {\n  if (typeof handler === \"function\") {\n    AxiosFlow.onSuccessHandler = handler;\n  } else {\n    throw new Error(\"successHandler must be a function\");\n  }\n  return AxiosFlow;\n};\n\nAxiosFlow.setFailureHandler = handler => {\n  if (typeof handler === \"function\") {\n    AxiosFlow.onErrorHandler = handler;\n  } else {\n    throw new Error(\"failureHandler must be a function\");\n  }\n  return AxiosFlow;\n};\n\nexport default AxiosFlow;\n"]}